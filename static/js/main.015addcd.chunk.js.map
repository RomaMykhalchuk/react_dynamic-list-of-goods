{"version":3,"sources":["api/api.ts","Components/Item.tsx","Components/GoodsList.tsx","App.tsx","index.tsx"],"names":["getGoods","fetch","then","response","json","Item","item","style","color","name","GoodsList","goods","map","key","id","App","state","isLoading","hasError","showFiveItems","setState","items","sort","a","b","localeCompare","splice","catch","loadAllGoods","goodsFromServer","showRedItems","filter","this","className","type","onClick","hidden","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAAaA,G,MAAW,WACtB,OAAOC,MAAM,yEACVC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YCUhBC,EANkC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClD,OACE,wBAAIC,MAAO,CAAEC,MAAOF,EAAKE,QAAUF,EAAKG,OCS7BC,EAV4C,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5D,OACE,4BACGA,EAAMC,KAAI,SAACN,GAAD,OACT,kBAAC,EAAD,CAAMA,KAAMA,EAAMO,IAAKP,EAAKQ,UC+DrBC,E,4MA9DbC,MAAQ,CACNL,MAAO,GACPM,WAAW,EACXC,UAAU,G,EAGZC,cAAgB,WACd,EAAKC,SAAS,CAAEH,WAAW,EAAMC,UAAU,EAAOP,MAAO,KACzDX,IACGE,MAAK,SAACmB,GAAD,OAAW,EAAKD,SAAS,CAC7BT,MAAOU,EACJC,MAAK,SAACC,EAAYC,GAAb,OAA4BD,EAAEd,KAAKgB,cAAcD,EAAEf,SACxDiB,OAAO,EAAG,GACbT,WAAW,OAEZU,OAAM,kBAAM,EAAKP,SAAS,CAAEF,UAAU,EAAMD,WAAW,Q,EAG5DW,aAAe,WACb,EAAKR,SAAS,CAAEH,WAAW,EAAMC,UAAU,EAAOP,MAAO,KACzDX,IACGE,MAAK,SAAC2B,GAAD,OAAqB,EAAKT,SAAS,CAAET,MAAOkB,EAAiBZ,WAAW,OAC7EU,OAAM,kBAAM,EAAKP,SAAS,CAAEF,UAAU,EAAMD,WAAW,Q,EAG5Da,aAAe,WACb,EAAKV,SAAS,CAAEH,WAAW,EAAMC,UAAU,EAAOP,MAAO,KACzDX,IACGE,MAAK,SAAC2B,GAAD,OAAqB,EAAKT,SAAS,CACvCT,MAAOkB,EAAgBE,QACrB,SAACzB,GAAD,MAAkC,QAAfA,EAAKE,SAE1BS,WAAW,OAEZU,OAAM,kBAAM,EAAKP,SAAS,CAAEF,UAAU,EAAMD,WAAW,Q,uDAGlD,IAAD,EACyBe,KAAKhB,MAA7BC,EADD,EACCA,UAAWC,EADZ,EACYA,SAEnB,OACE,yBAAKe,UAAU,WACb,4BAAQC,KAAK,SAASC,QAASH,KAAKJ,aAAcK,UAAU,UAA5D,kBAIA,4BAAQC,KAAK,SAASC,QAASH,KAAKb,cAAec,UAAU,UAA7D,gBAIA,4BAAQC,KAAK,SAASC,QAASH,KAAKF,aAAcG,UAAU,UAA5D,kBAIA,yBAAKA,UAAU,SAASG,QAASnB,IAChCC,GAAY,uDACb,kBAAC,EAAD,CAAWP,MAAOqB,KAAKhB,MAAML,a,GAzDnB0B,IAAMC,WCPxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.015addcd.chunk.js","sourcesContent":["export const getGoods = () => {\n  return fetch('https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json')\n    .then(response => response.json());\n};\n","import React from 'react';\n\ninterface ItemProps {\n  item: Product;\n}\n\nconst Item: React.FunctionComponent<ItemProps> = ({ item }) => {\n  return (\n    <li style={{ color: item.color }}>{item.name}</li>\n  );\n};\n\nexport default Item;\n","import React from 'react';\nimport Item from './Item';\n\ninterface GoodsListProps {\n  goods: Product[];\n}\n\nconst GoodsList: React.FunctionComponent<GoodsListProps> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map((item) => (\n        <Item item={item} key={item.id} />\n      ))}\n    </ul>\n  );\n};\n\nexport default GoodsList;\n","import React from 'react';\nimport './App.css';\nimport { getGoods } from './api/api';\nimport GoodsList from './Components/GoodsList';\n\ntype State = {\n  goods: Product[];\n  isLoading: boolean;\n  hasError: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: [],\n    isLoading: false,\n    hasError: false,\n  };\n\n  showFiveItems = () => {\n    this.setState({ isLoading: true, hasError: false, goods: [] });\n    getGoods()\n      .then((items) => this.setState({\n        goods: items\n          .sort((a: Product, b: Product) => a.name.localeCompare(b.name))\n          .splice(0, 5),\n        isLoading: false,\n      }))\n      .catch(() => this.setState({ hasError: true, isLoading: false }));\n  };\n\n  loadAllGoods = () => {\n    this.setState({ isLoading: true, hasError: false, goods: [] });\n    getGoods()\n      .then((goodsFromServer) => this.setState({ goods: goodsFromServer, isLoading: false }))\n      .catch(() => this.setState({ hasError: true, isLoading: false }));\n  };\n\n  showRedItems = () => {\n    this.setState({ isLoading: true, hasError: false, goods: [] });\n    getGoods()\n      .then((goodsFromServer) => this.setState({\n        goods: goodsFromServer.filter(\n          (item: Product) => item.color === 'red',\n        ),\n        isLoading: false,\n      }))\n      .catch(() => this.setState({ hasError: true, isLoading: false }));\n  };\n\n  render() {\n    const { isLoading, hasError } = this.state;\n\n    return (\n      <div className=\"wrapper\">\n        <button type=\"button\" onClick={this.loadAllGoods} className=\"button\">\n          Load All Goods\n        </button>\n\n        <button type=\"button\" onClick={this.showFiveItems} className=\"button\">\n          Show 5 Goods\n        </button>\n\n        <button type=\"button\" onClick={this.showRedItems} className=\"button\">\n          Show Red Items\n        </button>\n\n        <div className=\"loader\" hidden={!isLoading} />\n        {hasError && <h3>Error, please try again</h3>}\n        <GoodsList goods={this.state.goods} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}